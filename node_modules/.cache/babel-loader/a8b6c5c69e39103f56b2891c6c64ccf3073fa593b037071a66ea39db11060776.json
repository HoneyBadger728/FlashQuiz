{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cards: {}\n};\nconst cardsSlice = createSlice({\n  name: 'cards',\n  initialState,\n  reducers: {\n    addCard: (state, action) => {\n      const {\n        id,\n        front,\n        back\n      } = action.payload;\n      state.cards[id] = {\n        id,\n        front,\n        back\n      };\n    }\n  }\n});\nexport const selectCardById = (state, cardId) => state.cards.cards[cardId];\nexport default cardsSlice.reducer;\nexport const {\n  addCard\n} = cardsSlice.actions;","map":{"version":3,"names":["createSlice","initialState","cards","cardsSlice","name","reducers","addCard","state","action","id","front","back","payload","selectCardById","cardId","reducer","actions"],"sources":["C:/Users/12397/Desktop/Projects/Portfolio Projects/Flashcard App/FlashQuiz/src/features/cards/cardsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    cards: {},\r\n};\r\n\r\nconst cardsSlice = createSlice({\r\n    name: 'cards',\r\n    initialState,\r\n    reducers: {\r\n        addCard: (state, action) => {\r\n           const { id, front, back } = action.payload;\r\n           state.cards[id] = { id, front, back }; \r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const selectCardById = (state, cardId) => state.cards.cards[cardId];\r\n\r\nexport default cardsSlice.reducer;\r\nexport const { addCard } = cardsSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CAAC;AACZ,CAAC;AAED,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzB,MAAM;QAAEC,EAAE;QAAEC,KAAK;QAAEC;MAAK,CAAC,GAAGH,MAAM,CAACI,OAAO;MAC1CL,KAAK,CAACL,KAAK,CAACO,EAAE,CAAC,GAAG;QAAEA,EAAE;QAAEC,KAAK;QAAEC;MAAK,CAAC;IACxC;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAME,cAAc,GAAGA,CAACN,KAAK,EAAEO,MAAM,KAAKP,KAAK,CAACL,KAAK,CAACA,KAAK,CAACY,MAAM,CAAC;AAE1E,eAAeX,UAAU,CAACY,OAAO;AACjC,OAAO,MAAM;EAAET;AAAQ,CAAC,GAAGH,UAAU,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}