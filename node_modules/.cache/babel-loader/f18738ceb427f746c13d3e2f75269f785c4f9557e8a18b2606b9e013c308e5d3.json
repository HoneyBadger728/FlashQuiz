{"ast":null,"code":"import React,{useState}from\"react\";import{useSelector}from\"react-redux\";// import selector\nimport{selectCardById}from\"./cardsSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Card(_ref){let{id}=_ref;const card=useSelector(state=>selectCardById(state,id));// replace this with a call to your selector to get a card by id\nconst[flipped,setFlipped]=useState(false);return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"card\",onClick:e=>setFlipped(!flipped),children:flipped?card.back:card.front})});}","map":{"version":3,"names":["React","useState","useSelector","selectCardById","jsx","_jsx","Card","_ref","id","card","state","flipped","setFlipped","children","className","onClick","e","back","front"],"sources":["C:/Users/12397/Desktop/Projects/Portfolio Projects/FcardApp/FlashQuiz/src/features/cards/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import selector\nimport { selectCardById } from \"./cardsSlice\";\n\nexport default function Card({ id }) {\n  const card = useSelector((state) => selectCardById(state, id)); // replace this with a call to your selector to get a card by id\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <li>\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\n        {flipped ? card.back : card.front}\n      </button>\n    </li>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,aAAa,CACzC;AACA,OAASC,cAAc,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,cAAe,SAAS,CAAAC,IAAIA,CAAAC,IAAA,CAAS,IAAR,CAAEC,EAAG,CAAC,CAAAD,IAAA,CACjC,KAAM,CAAAE,IAAI,CAAGP,WAAW,CAAEQ,KAAK,EAAKP,cAAc,CAACO,KAAK,CAAEF,EAAE,CAAC,CAAC,CAAE;AAChE,KAAM,CAACG,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAE7C,mBACEI,IAAA,OAAAQ,QAAA,cACER,IAAA,WAAQS,SAAS,CAAC,MAAM,CAACC,OAAO,CAAGC,CAAC,EAAKJ,UAAU,CAAC,CAACD,OAAO,CAAE,CAAAE,QAAA,CAC3DF,OAAO,CAAGF,IAAI,CAACQ,IAAI,CAAGR,IAAI,CAACS,KAAK,CAC3B,CAAC,CACP,CAAC,CAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}